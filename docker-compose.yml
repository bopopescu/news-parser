version: '3'

services:
  redis:
    image: redis:4.0.5-alpine
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq
    restart: unless-stopped
    env_file:
      - .env

  autoheal:
    restart: unless-stopped
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  webpack:
    build:
      context: .
      dockerfile: dockerfiles/webpack/Dockerfile
    volumes:
      - ./frontend:/frontend
    working_dir: /frontend
    command: ./entrypoint.sh build

  web:
    image: nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./frontend:/frontend
      - ./backend:/backend
      - ./backend/static:/usr/share/nginx/django-static
      - ./dockerfiles/nginx/prod.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

  app:
    build:
      context: .
      dockerfile: dockerfiles/app/Dockerfile
    restart: unless-stopped
    command: gunicorn app.wsgi -c gunicorn.py
    working_dir: /backend/src
    volumes:
      - ./backend:/backend
      - ./media:/backend/src/media
      - ./.ssh:/.ssh
    env_file:
      - .env
    depends_on:
      - redis

  app_websocket:
    build:
      context: .
      dockerfile: dockerfiles/app/Dockerfile
    restart: unless-stopped
    command: daphne -b 0.0.0.0 -p 8001 app.asgi:application
    working_dir: /backend/src
    ports:
      - 8001:8001
    volumes:
      - ./backend:/backend
      - ./.ssh:/.ssh
    env_file:
      - .env
    depends_on:
      - redis

  telegram_worker:
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "telegram_workers_healthcheck.py"]
      interval: 30s
      timeout: 30s
      retries: 3
    build:
      context: .
      dockerfile: dockerfiles/celery_worker/Dockerfile
    command: celery worker -A app -E -l INFO --concurrency=20 -O fair -Q telegram
    working_dir: /backend/src
    env_file:
      - .env
    volumes:
      - ./backend:/backend
      - ./media:/backend/src/media
      - ./.ssh:/.ssh
    depends_on:
      - redis
      - rabbitmq

  rss_worker:
    restart: unless-stopped
    build:
      context: .
      dockerfile: dockerfiles/celery_worker/Dockerfile
    command: celery worker -A app -E -l INFO --concurrency=1 -O fair -Q rss
    working_dir: /backend/src
    env_file:
      - .env
    volumes:
      - ./backend:/backend
      - ./media:/backend/src/media
      - ./.ssh:/.ssh
    depends_on:
      - redis
      - rabbitmq

  twitter_worker:
    restart: unless-stopped
    build:
      context: .
      dockerfile: dockerfiles/celery_worker/Dockerfile
    command: celery worker -A app -E -l INFO --concurrency=20 -O fair -Q twitter
    working_dir: /backend/src
    env_file:
      - .env
    volumes:
      - ./backend:/backend
      - ./media:/backend/src/media
      - ./.ssh:/.ssh
    depends_on:
      - redis
      - rabbitmq

  attachements_worker:
    restart: unless-stopped
    build:
      context: .
      dockerfile: dockerfiles/celery_worker/Dockerfile
    command: celery worker -A app -E -l INFO --concurrency=4 -Q attachements
    working_dir: /backend/src
    env_file:
      - .env
    volumes:
      - ./backend:/backend
      - ./media:/backend/src/media
      - ./.ssh:/.ssh
    depends_on:
      - redis
      - rabbitmq

  celery_beat:
    restart: unless-stopped
    build:
      context: .
      dockerfile: dockerfiles/celery_worker/Dockerfile
    command: celery -A app beat -l info --pidfile= --scheduler django_celery_beat.schedulers:DatabaseScheduler
    working_dir: /backend/src
    env_file:
      - .env
    volumes:
      - ./backend:/backend
      - ./media:/backend/src/media
      - ./.ssh:/.ssh
    depends_on:
      - redis
      - rabbitmq

  flower:
    restart: unless-stopped
    build:
      context: .
      dockerfile: dockerfiles/flower/Dockerfile
    working_dir: /backend/src
    env_file:
      - .env
    volumes:
      - ./backend:/backend
    entrypoint: celery flower -A app --address=0.0.0.0 --port=5555 --url_prefix=flower
    ports:
      - 5555:5555
    depends_on:
      - redis

networks:
  default:
    external:
      name: tg_parser